@model  HF2BankOpgave.Models.AccountOverViewModel
@using System.Linq

@Styles.Render("https://cdn.datatables.net/1.10.16/css/dataTables.bootstrap4.min.css")
@Scripts.Render("~/bundles/jquery")

<div class="container">
    <div class="container-fluid card box-shadow">
        <div class="card-body">
            <div>
                @using (Html.BeginForm("Transactions", "Home", FormMethod.Get))
                {
                    <div class="form-row">
                        <div class="form-inline col">
                            <div class="input-group col-sm-8 InputMargin">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="TextBox">Account Number:</label>
                                </div>
                                <input type="text" class="form-control" id="AccountId" name="AccountId" />
                            </div>
                            <div class="input-group col-sm-4 InputMargin">
                                <div class="input-group-prepend">
                                    <label class="input-group-text" for="Rows"># of rows</label>
                                </div>
                                @Html.DropDownListFor(m => m.ChosenNumberOfRows,
                                       new SelectList(Model.NumberOfRows), new { @class = "form-control", @id = "Rows" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-inline col">
                            <div class="input-group col-sm InputMargin">
                                <button type="submit" class="btn btn-primary" name="myBtn" value="hejmor">Execute</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<br />
<div class="container-fluid card">
    <div class="card-body">
        <div class="container-fluid">
            <table id="CP" class="table table-striped table-bordered table-hover table-responsive" style="max-height: 50em">
                <thead>
                    <tr>
                        <th onclick="sortTable(0)">First name:</th>
                        <th onclick="sortTable(1)">Last name:</th>
                        <th onclick="sortTable(2)">AccountId:</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CustomerTabledata)
                    {
                        <tr>
                            <td class="TableTDClass">@item.FirstName</td>
                            <td class="TableTDClass">@item.LastName</td>
                            <td class="TableTDClass">@item.CustomerID</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div id="orderModal" class="modal hide fade" role="dialog" aria-labelledby="orderModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Information</h3>
                        <button type="button" class="btn btn-secondary close" data-dismiss="modal">
                            <span>&times;</span>
                        </button>
                    </div>
                    <div id="orderDetails" class="modal-body badge-dark">Message: </div>
                    <div id="orderItems" class="modal-body badge-secondary">
                        <label></label>
                        <span id="Response"></span>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-secondary close" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    //SearchForStringInAllTableRows Script
    function filterTable(event) {
        var filter = event.target.value.toUpperCase();
        var rows = document.querySelector("#CP tbody").rows;

        for (var i = 0; i < rows.length; i++) {
            var firstCol = rows[i].cells[0].textContent.toUpperCase();
            var secondCol = rows[i].cells[1].textContent.toUpperCase();
            var thirdCol = rows[i].cells[2].textContent.toUpperCase();
            var fourthCol = rows[i].cells[3].textContent.toUpperCase();
            if (firstCol.indexOf(filter) > -1 || secondCol.indexOf(filter) > -1 || thirdCol.indexOf(filter) > -1 || fourthCol.indexOf(filter) > -1) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }
    document.querySelector('#myInput').addEventListener('keyup', filterTable, false);

    //SortOnHeaderClick Script
    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("CP");
        switching = true;
        dir = "asc";
        while (switching) {
            switching = false;
            rows = table.getElementsByTagName("tr");
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                x = rows[i].getElementsByTagName("td")[n];
                y = rows[i + 1].getElementsByTagName("td")[n];
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                switchcount++;
            } else {
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }
    }

    //ModalPopUpOnClick Script
    $(function () {
        $(".table-striped tbody").on('click', 'tr', function (e) {

            console.log(this);

            var mssg = $(this).find('td:last div').text();

            $('#Response').text(mssg);
            $('#orderModal').modal('show');
            //// Xhr
            //$http('url', { id: $(e.currentTarget).data() }, (result) => {

            //    $('#orderModal').modal('show', template = result inject into #orderModal);

            //}).catch((err) => {
            //    throw err;
            //});
        });
    });

</script>


